/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./javascript/index.js":
/*!*****************************!*\
  !*** ./javascript/index.js ***!
  \*****************************/
/***/ (() => {

eval("function fetchData(callback) {\r\n  fetch(\"/public/recipes.json\")\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n      callback(data.recipes);\r\n    });\r\n}\r\n\r\nfunction fetchRecipes(recipes) {\r\n  let recipeContainer = document.getElementById(\"container-card\");\r\n  let htmlrecipe = \"\";\r\n  let allRecipes = [];\r\n\r\n  for (let recipe in recipes) {\r\n    htmlrecipe += `<div class=\"card\">`;\r\n    htmlrecipe += `<div class=\"card__img\"></div>`;\r\n    htmlrecipe += `<div class=\"card__recipe\"> <h2>${recipes[recipe].name}</h2> <i class=\"far fa-clock\"></i><h3>${recipes[recipe].time}min</h3></div>`;\r\n    htmlrecipe += `<div class=\"card__text\"><div class=\"card__ingredients\">`;\r\n\r\n    for (let ingredientLoop in recipes[recipe].ingredients) {\r\n      let unitTrue = \"\";\r\n      if (recipes[recipe].ingredients[ingredientLoop].unit) {\r\n        unitTrue = recipes[recipe].ingredients[ingredientLoop].unit;\r\n      }\r\n      htmlrecipe += `<h4>${recipes[recipe].ingredients[ingredientLoop].ingredient} : ${recipes[recipe].ingredients[ingredientLoop].quantity} ${unitTrue} </h4>`;\r\n    }\r\n    htmlrecipe += `</div>`;\r\n    htmlrecipe += `<div class=\"card__description\"><p>${recipes[recipe].description}</p></div>`;\r\n    htmlrecipe += `</div>`;\r\n    htmlrecipe += `</div>`;\r\n  }\r\n  recipeContainer.innerHTML = htmlrecipe;\r\n}\r\n\r\nfunction showTriIngredient(recipes) {\r\n  let navFiltre = document.getElementById(\"dropdown-ingredient\");\r\n  let htmlnavFiltre = \"\";\r\n  let allIngredient = [];\r\n  for (let i in recipes) {\r\n    for (let j in recipes[i].ingredients) {\r\n      for (let k in recipes[i].ingredients[j].ingredient)\r\n        allIngredient.push(recipes[i].ingredients[j].ingredient);\r\n    }\r\n  }\r\n  let uniqueTypes = allIngredient.filter(\r\n    (value, index, self) => self.indexOf(value) === index\r\n  );\r\n  htmlnavFiltre += `<button onclick=\"myFunctionTriIngredient();\" class=\"dropbtn-ingredient\" aria-expanded=\"true\" aria-controls=\"id_about_menu\" tabindex=\"0\">Ingredients<i class=\"fas fa-chevron-down\"></i></button>`;\r\n  htmlnavFiltre += `<div id=\"myDropdown-ingredient\" class=\"dropdown-content-ingredient\" id=\"id_about_menu\" >`;\r\n  htmlnavFiltre += `<a tabindex=\"0\">on ecrit<i class=\"fas fa-chevron-up\"></i></a>`;\r\n  htmlnavFiltre += `<div class=\"container-ingredient\">`;\r\n  for (let l in uniqueTypes) {\r\n    htmlnavFiltre += `<li><input  type=\"checkbox\" class=\"check\" id=\"${uniqueTypes[l]}\" name=\"header__tags\" value=\"${uniqueTypes[l]}\"><label class=\"labeltags\">${uniqueTypes[l]}</label></li>`;\r\n  }\r\n  htmlnavFiltre += `</div>`;\r\n  htmlnavFiltre += `</div>`;\r\n  navFiltre.innerHTML = htmlnavFiltre;\r\n}\r\n\r\nfunction myFunctionTriIngredient() {\r\n  document\r\n    .getElementById(\"myDropdown-ingredient\")\r\n    .classList.toggle(\"show-ingredient\");\r\n}\r\nwindow.myFunctionTriIngredient = myFunctionTriIngredient;\r\n\r\n/* ---------------------------------------------------------------------------- */\r\nfunction showTriDevice(recipes) {\r\n  let navFiltre = document.getElementById(\"dropdown-device\");\r\n  let htmlnavFiltre = \"\";\r\n  let allDevice = [];\r\n  for (let i in recipes) {\r\n    for (let j in recipes[i].appliance) {\r\n      allDevice.push(recipes[i].appliance);\r\n    }\r\n  }\r\n  let uniqueTypes = allDevice.filter(\r\n    (value, index, self) => self.indexOf(value) === index\r\n  );\r\n  htmlnavFiltre += `<button onclick=\"myFunctionTriDevice();\" class=\"dropbtn-device\" aria-expanded=\"true\" aria-controls=\"id_about_menu\" tabindex=\"0\">Appareil<i class=\"fas fa-chevron-down\"></i></button>`;\r\n  htmlnavFiltre += `<div id=\"myDropdown-device\" class=\"dropdown-content-device\" id=\"id_about_menu\" >`;\r\n  htmlnavFiltre += `<a   tabindex=\"0\"><i class=\"fas fa-chevron-up\"></i></a>`;\r\n  htmlnavFiltre += `<div class=\"container-device\">`;\r\n  for (let l in uniqueTypes) {\r\n    htmlnavFiltre += `<li><input  type=\"checkbox\" class=\"check\" id=\"${uniqueTypes[l]}\" name=\"header__tags\" ><label class=\"labeltags\">${uniqueTypes[l]}</label></li>`;\r\n  }\r\n  htmlnavFiltre += `</div>`;\r\n  htmlnavFiltre += `</div>`;\r\n\r\n  navFiltre.innerHTML = htmlnavFiltre;\r\n}\r\n\r\nfunction myFunctionTriDevice() {\r\n  document.getElementById(\"myDropdown-device\").classList.toggle(\"show-device\");\r\n}\r\nwindow.myFunctionTriDevice = myFunctionTriDevice;\r\n\r\n/* ---------------------------------------------------------------------------- */\r\nfunction showTriUtensils(recipes) {\r\n  let navFiltre = document.getElementById(\"dropdown-utensils\");\r\n  let htmlnavFiltre = \"\";\r\n  let allUtensils = [];\r\n  for (let i in recipes) {\r\n    for (let j in recipes[i].ustensils) {\r\n      allUtensils.push(recipes[i].ustensils);\r\n    }\r\n  }\r\n  let uniqueTypes = allUtensils.filter(\r\n    (value, index, self) => self.indexOf(value) === index\r\n  );\r\n  htmlnavFiltre += `<button onclick=\"myFunctionTriUtensils();\" class=\"dropbtn-utensils\" aria-expanded=\"true\" aria-controls=\"id_about_menu\" tabindex=\"0\">Ustensils<i class=\"fas fa-chevron-down\"></i></button>`;\r\n  htmlnavFiltre += `<div id=\"myDropdown-utensils\" class=\"dropdown-content-utensils\" id=\"id_about_menu\" >`;\r\n  htmlnavFiltre += `<a tabindex=\"0\"><i class=\"fas fa-chevron-up\"></i></a>`;\r\n  htmlnavFiltre += `<div class=\"container-utensils\">`;\r\n  for (let l in uniqueTypes) {\r\n    htmlnavFiltre += `<li><input  type=\"checkbox\" class=\"check\" id=\"${uniqueTypes[l]}\" name=\"header__tags\"><label class=\"labeltags\">${uniqueTypes[l]}</label></li>`;\r\n  }\r\n  htmlnavFiltre += `</div>`;\r\n  htmlnavFiltre += `</div>`;\r\n  navFiltre.innerHTML = htmlnavFiltre;\r\n}\r\n\r\nfunction myFunctionTriUtensils() {\r\n  document\r\n    .getElementById(\"myDropdown-utensils\")\r\n    .classList.toggle(\"show-utensils\");\r\n}\r\nwindow.myFunctionTriUtensils = myFunctionTriUtensils;\r\n\r\nwindow.onclick = function (event) {\r\n  if (event.target.matches(\".dropbtn-ingredient\")) {\r\n    let dropdownsIngredient = document.getElementsByClassName(\r\n      \"dropdown-content-ingredient\"\r\n    );\r\n\r\n    for (let i1 = 0; i1 < dropdownsIngredient.length; i1++) {\r\n      let openDropdownIngredient = dropdownsIngredient[i1];\r\n      if (openDropdownIngredient.classList.contains(\"show-ingredient\")) {\r\n        openDropdownIngredient.classList.remove(\"show-ingredient\");\r\n      }\r\n    }\r\n  } else if (event.target.matches(\".dropbtn-device\")) {\r\n    let dropdownsDevice = document.getElementsByClassName(\r\n      \"dropdown-content-device\"\r\n    );\r\n\r\n    for (let i2 = 0; i2 < dropdownsDevice.length; i2++) {\r\n      let openDropdownDevice = dropdownsDevice[i2];\r\n      if (openDropdownDevice.classList.contains(\"show-device\")) {\r\n        openDropdownDevice.classList.remove(\"show-device\");\r\n      }\r\n    }\r\n  } else if (event.target.matches(\".dropbtn-utensils\")) {\r\n    let dropdownsUtensils = document.getElementsByClassName(\r\n      \"dropdown-content-utensils\"\r\n    );\r\n\r\n    for (let i3 = 0; i3 < dropdownsUtensils.length; i3++) {\r\n      let openDropdownUtensils = dropdownsUtensils[i3];\r\n      if (openDropdownUtensils.classList.contains(\"show-utensils\")) {\r\n        openDropdownUtensils.classList.remove(\"show-utensils\");\r\n      }\r\n    }\r\n  }\r\n};\r\nconst searchUser = document.querySelector(\"#search-bar__text\");\r\nfunction filterByRecipe(recipes) {\r\n  searchUser.addEventListener(\"input\", (e) => {\r\n    const element = e.target.value.toLowerCase();\r\n    const result = recipes.filter((search) =>\r\n      search.name.toLowerCase().includes(element)\r\n    );\r\n    fetchRecipes(result);\r\n  });\r\n}\r\nfunction filterByIngredient(recipes) {\r\n  searchUser.addEventListener(\"input\", (e) => {\r\n    const element = e.target.value.toLowerCase();\r\n    const result = recipes.filter((search) =>\r\n      search.ingredients.toLowerCase().includes(element)\r\n    );\r\n\r\n    fetchRecipes(result);\r\n  });\r\n}\r\nfunction filterByDevice(recipes) {\r\n  searchUser.addEventListener(\"input\", (e) => {\r\n    const element = e.target.value.toLowerCase();\r\n    const result = recipes.filter((search) =>\r\n      search.appliance.toLowerCase().includes(element)\r\n    );\r\n\r\n    fetchRecipes(result);\r\n  });\r\n}\r\nfunction filterByUtensils(recipes) {\r\n  searchUser.addEventListener(\"input\", (e) => {\r\n    const element = e.target.value.toLowerCase();\r\n    const result = recipes.filter((search) =>\r\n      search.ustensils.toLowerCase().includes(element)\r\n    );\r\n\r\n    fetchRecipes(result);\r\n  });\r\n}\r\n\r\nfetchData((recipes) => {\r\n  fetchRecipes(recipes);\r\n  showTriIngredient(recipes);\r\n  showTriDevice(recipes);\r\n  showTriUtensils(recipes);\r\n  filterByRecipe(recipes);\r\n});\r\n\n\n//# sourceURL=webpack://lespetitsplats/./javascript/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./javascript/index.js"]();
/******/ 	
/******/ })()
;